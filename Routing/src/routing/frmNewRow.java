/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * frmNewRow.java
 *
 * Created on 1 Οκτ 2011, 9:12:55 μμ
 */
package routing;

import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;

/**
 *
 * @author elias
 */
public class frmNewRow extends javax.swing.JFrame {

    /** Creates new form frmNewRow */
   //Custom event Test
    List<Integer> AreasID=new ArrayList<Integer>();
    List<Integer> NodesID=new ArrayList<Integer>();
   
    public frmNewRow(String Tab) {
        initComponents();
        setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        //btnPlusAreas.setIcon(new ImageIcon("./Resources/plus-icon.png"));
        //btnPlusNodes.setIcon(new ImageIcon("./Resources/plus-icon.png"));
        
        if (Tab.equals("Areas")){
            SelectionTabPanel.setSelectedIndex(SelectionTabPanel.indexOfTab("Areas"));
            SelectionTabPanel.setEnabledAt(SelectionTabPanel.indexOfTab("Nodes"), false);
        }else if(Tab.equals("Nodes")){
            SelectionTabPanel.setSelectedIndex(SelectionTabPanel.indexOfTab("Nodes"));
            SelectionTabPanel.setEnabledAt(SelectionTabPanel.indexOfTab("Areas"), false);
            bxArea.doClick();
        }
        //TODO Remove At End:
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        SelectionTabPanel = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        bxArea = new javax.swing.JCheckBox();
        bxCoordinator = new javax.swing.JCheckBox();
        SlArea = new javax.swing.JComboBox();
        NeighbourPanel = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        ComboPlusAreas = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();
        btnPlusAreas = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        ComboPlusNodes = new javax.swing.JComboBox();
        btnPlusNodes = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        AddedComboNeigh = new javax.swing.JComboBox();
        SlCoordinatorArea = new javax.swing.JComboBox();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        TextStartFreq = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        TextStopFreq = new javax.swing.JTextField();
        btnAddNode = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        bxArea.setText("Area Flag");
        bxArea.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                bxAreaItemStateChanged(evt);
            }
        });

        bxCoordinator.setText("Coordinator Flag");
        bxCoordinator.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                bxCoordinatorItemStateChanged(evt);
            }
        });

        NeighbourPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel3.setForeground(new java.awt.Color(255, 0, 51));
        jLabel3.setText("Pick Neighbours");
        NeighbourPanel.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 11, 145, -1));
        NeighbourPanel.add(ComboPlusAreas, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 50, 50, -1));

        jLabel4.setText("Available Neighbours");
        NeighbourPanel.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 33, -1, -1));

        btnPlusAreas.setText("+");
        btnPlusAreas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPlusAreasActionPerformed(evt);
            }
        });
        NeighbourPanel.add(btnPlusAreas, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 50, -1, 20));

        jLabel5.setText("Added Neighbours");
        NeighbourPanel.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 108, -1, -1));

        jLabel6.setText("Areas");
        NeighbourPanel.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 50, -1, -1));
        NeighbourPanel.add(ComboPlusNodes, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 80, 50, -1));

        btnPlusNodes.setText("+");
        btnPlusNodes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPlusNodesActionPerformed(evt);
            }
        });
        NeighbourPanel.add(btnPlusNodes, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 80, -1, 20));

        jLabel7.setText("Nodes");
        NeighbourPanel.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 80, -1, -1));
        NeighbourPanel.add(AddedComboNeigh, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 130, 140, -1));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(170, 170, 170)
                        .addComponent(NeighbourPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(bxArea, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(SlArea, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(33, 33, 33)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(SlCoordinatorArea, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(bxCoordinator))))
                .addGap(10, 10, 10))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(60, 60, 60)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(bxArea)
                    .addComponent(bxCoordinator))
                .addGap(7, 7, 7)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(SlArea, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SlCoordinatorArea, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(13, 13, 13)
                .addComponent(NeighbourPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        SelectionTabPanel.addTab("Nodes", jPanel1);

        jPanel3.setLayout(new java.awt.GridLayout(2, 2));

        jLabel1.setText("Start Frequency");
        jPanel3.add(jLabel1);

        TextStartFreq.setFont(new java.awt.Font("Arial", 0, 8)); // NOI18N
        TextStartFreq.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                TextStartFreqKeyTyped(evt);
            }
        });
        jPanel3.add(TextStartFreq);

        jLabel2.setText("Stop Frequency");
        jPanel3.add(jLabel2);

        TextStopFreq.setFont(new java.awt.Font("Arial", 0, 8)); // NOI18N
        TextStopFreq.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                TextStopFreqKeyTyped(evt);
            }
        });
        jPanel3.add(TextStopFreq);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, 317, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(94, 94, 94)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(249, Short.MAX_VALUE))
        );

        SelectionTabPanel.addTab("Areas", jPanel2);

        btnAddNode.setText("Add");
        btnAddNode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddNodeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(SelectionTabPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 342, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(153, 153, 153)
                        .addComponent(btnAddNode)))
                .addContainerGap(22, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(SelectionTabPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 403, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnAddNode)
                .addContainerGap(19, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bxAreaItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_bxAreaItemStateChanged
        // TODO add your handling code here:
        if(evt.getStateChange()==1){
            ComboPlusAreas.removeAllItems();
            ComboPlusNodes.removeAllItems();
            AddedComboNeigh.removeAllItems();
            SlCoordinatorArea.removeAllItems();
            bxCoordinator.setSelected(false);
            SlCoordinatorArea.setEnabled(false);
            SlArea.setEnabled(true);
            NeighbourPanel.setVisible(false);
            //Populatin SelectAreaComboBox
            DbConnection db=new DbConnection();
            Connection conn=db.Connect();
   try{
         ResultSet rs=db.SelectFromDb(EnumeRators.Area, "Select * From ", conn);
   if (rs!=null){
      while(rs.next()){
         SlArea.addItem(rs.getString("ID"));
     }
      conn.close();
      rs.close();
   }
    }catch(SQLException e){
    e.printStackTrace();
}
        }else if(evt.getStateChange()==2){
            SlArea.setEnabled(false);
            SlArea.removeAllItems();
            NeighbourPanel.setVisible(true);
            FillNeighComboBoxes();
        }
        
    }//GEN-LAST:event_bxAreaItemStateChanged
    //Set Plus Combo Boxes
    public void FillNeighComboBoxes(){
        DbConnection db=new DbConnection();
        Connection conn=db.Connect();
        try{
        ResultSet rs=db.SelectFromDb(EnumeRators.Area,"Select * From ", conn);
                while(rs.next()){
                    ComboPlusAreas.addItem(rs.getString("ID"));
                }
                rs=db.SelectFromDb(EnumeRators.Node,"Select * From ", conn);
                while(rs.next()){
                    if(rs.getInt("Area_ID")==-1){
                        ComboPlusNodes.addItem(rs.getString("ID"));
                    }                    
                }
            rs.close();
            conn.close();
        }catch(SQLException e){
        e.printStackTrace();
        }
    }
    
private void btnAddNodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddNodeActionPerformed

      
   
   //Insert to db From NodesTab
if(SelectionTabPanel.getSelectedIndex()==SelectionTabPanel.indexOfTab("Nodes")){
   DbConnection db=new DbConnection();
   Connection conn=db.Connect(); 
   try{
   
   int KeyNodesCount=db.ReturnUniqueKey(EnumeRators.Node, conn);
   //int KeyAreasCount=db.ReturnUniqueKey(EnumeRators.Area, conn);
   
    if (bxArea.isSelected()){
       if(SlArea.getItemCount()>0){
       db.AddToDb( "INSERT INTO Nodes (ID,Area_flag,Coordinator_flag,Area_ID) VALUES (" + (KeyNodesCount+1)+","+ "1,0," + SlArea.getSelectedItem()+")", conn);
       FrmNodes.NodesTm.fireTableDataChanged();
       }else{
           JOptionPane.showMessageDialog(this, "You should pick an area to include the node", "Warning", JOptionPane.ERROR_MESSAGE);
       }
   }
    else{
        if(bxCoordinator.isSelected()){
           
            if(AreasID.size()==1){
                 db.AddToDb( "INSERT INTO Nodes (ID,Area_flag,Coordinator_flag,Area_ID) VALUES (" +(KeyNodesCount+1)+",0,1,"+ SlCoordinatorArea.getSelectedItem()+")", conn);
            //Add Neighbours
            for (int i:AreasID){
                db.AddToDb("INSERT INTO AreasNeighbours(ID,NodeID,NeighbourAreaID) VALUES ("+(db.ReturnUniqueKey(EnumeRators.AreasNeighbours, conn)+1)+"," +(KeyNodesCount+1)+","+i+")", conn);
            }    
            }else if(AreasID.size()>1){
              JOptionPane.showMessageDialog(this, "The coordinator node can only have one area as a Neighbour", "Warning", JOptionPane.ERROR_MESSAGE);
            }
            for (int i:NodesID){
                db.AddToDb("INSERT INTO NodesNeighbours(ID,NodeID,NeighbourNodeID) VALUES ("+(db.ReturnUniqueKey(EnumeRators.NodesNeighbours, conn)+1)+"," +(KeyNodesCount+1)+","+i+")", conn);
            }
            FrmNodes.NodesTm.fireTableDataChanged();
        }
        else{
            db.AddToDb( "INSERT INTO Nodes (ID,Area_flag,Coordinator_flag,Area_ID) VALUES (" + (KeyNodesCount+1)+",0,0,-1)", conn);
            //Add Neighbours
            for (int i:AreasID){
                db.AddToDb("INSERT INTO AreasNeighbours(ID,NodeID,NeighbourAreaID) VALUES ("+(db.ReturnUniqueKey(EnumeRators.AreasNeighbours, conn)+1)+"," +(KeyNodesCount+1)+","+i+")", conn);
            }
            for (int i:NodesID){
                db.AddToDb("INSERT INTO AreasNeighbours(ID,NodeID,NeighbourAreaID) VALUES ("+(db.ReturnUniqueKey(EnumeRators.AreasNeighbours, conn)+1)+"," +(KeyNodesCount+1)+","+i+")", conn);
            }
            FrmNodes.NodesTm.fireTableDataChanged();
        }
    }
    NodesID.clear();
    AreasID.clear();
   if(!conn.isClosed()){
       conn.close();
   }
   }catch(SQLException e){
       e.printStackTrace();
   }
   this.dispose();
}else if(SelectionTabPanel.getSelectedIndex()==SelectionTabPanel.indexOfTab("Areas")){
    if((TextStartFreq.getText().isEmpty()) || (TextStopFreq.getText().isEmpty())){
        
    }else {
    DbConnection db=new DbConnection();
    Connection conn=db.Connect();
    int AreasCount=db.ReturnUniqueKey(EnumeRators.Area, conn);
    db.AddToDb("INSERT INTO Areas(ID,Start_frq,Stop_frq) VALUES("+(AreasCount+1)+","+TextStartFreq.getText()+","+TextStopFreq.getText()+")", conn);
    frmAreas.AreasTm.fireTableDataChanged();
    this.dispose();
    }
}


}//GEN-LAST:event_btnAddNodeActionPerformed

private void btnPlusAreasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPlusAreasActionPerformed
    if(ComboPlusAreas.getSelectedItem()!=null){
     AddedComboNeigh.addItem(" Area with ID: "+ComboPlusAreas.getSelectedItem());
     AreasID.add(Integer.parseInt(ComboPlusAreas.getSelectedItem().toString()));
    }
}//GEN-LAST:event_btnPlusAreasActionPerformed

private void bxCoordinatorItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_bxCoordinatorItemStateChanged
if(evt.getStateChange()==1){
    bxArea.setSelected(false);
    SlCoordinatorArea.setEnabled(true);
    DbConnection db=new DbConnection();
    Connection conn=db.Connect();
      try{
         ResultSet rs=db.SelectFromDb(EnumeRators.Area, "Select * From ", conn);
   if (rs!=null){
      while(rs.next()){
         SlCoordinatorArea.addItem(rs.getString("ID"));
     }
      conn.close();
      rs.close();
   }
    }catch(SQLException e){
    e.printStackTrace();
}
}else if(evt.getStateChange()==2){
SlCoordinatorArea.removeAllItems();
SlCoordinatorArea.setEnabled(false);
}
}//GEN-LAST:event_bxCoordinatorItemStateChanged

private void btnPlusNodesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPlusNodesActionPerformed
 if(ComboPlusNodes.getSelectedItem()!=null){
     AddedComboNeigh.addItem(" Node with ID: "+ComboPlusNodes.getSelectedItem());
     NodesID.add(Integer.parseInt(ComboPlusNodes.getSelectedItem().toString()));
    }
}//GEN-LAST:event_btnPlusNodesActionPerformed

private void TextStartFreqKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TextStartFreqKeyTyped
char c=evt.getKeyChar();
if ((Character.isDigit(c)) || (c==KeyEvent.VK_BACK_SPACE) || (c==KeyEvent.VK_DELETE)){
    
}else{
    evt.consume();
}

}//GEN-LAST:event_TextStartFreqKeyTyped

private void TextStopFreqKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TextStopFreqKeyTyped
char c=evt.getKeyChar();
if ((Character.isDigit(c)) || (c==KeyEvent.VK_BACK_SPACE) || (c==KeyEvent.VK_DELETE)){
    
}else{
    evt.consume();
}
}//GEN-LAST:event_TextStopFreqKeyTyped

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox AddedComboNeigh;
    private javax.swing.JComboBox ComboPlusAreas;
    private javax.swing.JComboBox ComboPlusNodes;
    private javax.swing.JPanel NeighbourPanel;
    private javax.swing.JTabbedPane SelectionTabPanel;
    private javax.swing.JComboBox SlArea;
    private javax.swing.JComboBox SlCoordinatorArea;
    private javax.swing.JTextField TextStartFreq;
    private javax.swing.JTextField TextStopFreq;
    private javax.swing.JButton btnAddNode;
    private javax.swing.JButton btnPlusAreas;
    private javax.swing.JButton btnPlusNodes;
    private javax.swing.JCheckBox bxArea;
    private javax.swing.JCheckBox bxCoordinator;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    // End of variables declaration//GEN-END:variables
}
