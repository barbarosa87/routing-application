/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * PanelDraw.java
 *
 * Created on 9 Δεκ 2011, 2:17:20 πμ
 */
package routing.Test;

import java.awt.Color;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.geom.Ellipse2D;
import java.awt.geom.Point2D;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import routing.DbConnection;
import routing.Enumerators.TableNames;

/**
 *
 * @author barbarosa
 */
public class PanelDraw extends javax.swing.JPanel {

    /** Creates new form PanelDraw */
    public PanelDraw() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    
    @Override
    public void paint(Graphics g){
        Graphics2D g2 = (Graphics2D) g;
        g2.setColor(Color.WHITE);
        List<Integer> AreasIDs=GetAreas();
        Point2D.Double point = new Point2D.Double(0, 0);
        for(Integer AreaID:AreasIDs){
            Ellipse2D.Double Area=new Ellipse2D.Double(point.x,point.y,50,50);
            g2.draw(Area);
            List<Integer> NodesIDs=GetContainingNodes(AreaID);
            Double FirstXNodePoint=Area.getCenterX()-10;
            Double FirstYNodePoint=Area.getCenterY()-10;
            for(Integer NodeID:NodesIDs){
            g2.draw(new Ellipse2D.Double(FirstXNodePoint,FirstYNodePoint,5,5));    
            FirstXNodePoint=FirstXNodePoint+5;
            FirstYNodePoint=FirstYNodePoint+5;
            }
            point.x=point.x+100;
            point.y=point.y+100;
        }
        

    }
    
    
    public List<Integer> GetContainingNodes(int AreaID){
      DbConnection db=new DbConnection();
    Connection conn=db.Connect();
    List<Integer> NodesIDs=new ArrayList<Integer>();   
    try{
    ResultSet rs=db.SelectFromDb(TableNames.Node,"WHERE Area_ID="+AreaID, conn);
    while(rs.next()){
        NodesIDs.add(rs.getInt("ID"));
    }
    conn.close();
    }catch(SQLException e){
        e.printStackTrace();
    }
    return NodesIDs;
    }
    
    
    public List<Integer> GetAreas(){
    DbConnection db=new DbConnection();
    Connection conn=db.Connect();
    List<Integer> AreasIDs=new ArrayList<Integer>();
    try{
    ResultSet rs=db.SelectFromDb(TableNames.Area,"", conn);
    while(rs.next()){
        AreasIDs.add(rs.getInt("ID"));
    }
    conn.close();
    }catch(SQLException e){
        e.printStackTrace();
    }
    return AreasIDs;
    }
    
    public void GetNodes(){
        
    }
    
    
    
    
    
    
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
